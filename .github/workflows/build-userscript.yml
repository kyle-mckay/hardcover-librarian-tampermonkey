name: Build Hardcover UserScript

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'wiki/**'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'main'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Check commit message for skip pattern
        id: skip_check
        run: |
          if git log -1 --pretty=%B | grep -q 'Build: Update metaquill.user.js'; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit early if skip pattern found
        if: steps.skip_check.outputs.skip == 'true'
        run: exit 0

      - name: Setup Git for pushing
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Wait 20 seconds
        run: sleep 20
      
      - name: Wait for Release Drafter to finish
        id: wait_for_rd
        uses: actions/github-script@v6
        with:
          retries: 30
          retry-delay-seconds: 10
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const workflowName = 'Release Drafter'; // Change if workflow name changes
            const branch = 'main';

            for (let attempt = 0; attempt < 30; attempt++) {
              // List workflow runs for the Release Drafter workflow on 'main'
              const workflows = await github.rest.actions.listRepoWorkflows({
                owner,
                repo,
              });

              const rdWorkflow = workflows.data.workflows.find(wf => wf.name === workflowName);
              if (!rdWorkflow) {
                core.info(`Workflow '${workflowName}' not found.`);
                return;
              }

              const runs = await github.rest.actions.listWorkflowRuns({
                owner,
                repo,
                workflow_id: rdWorkflow.id,
                branch,
                status: 'in_progress',
              });

              if (runs.data.total_count > 0) {
                core.info(`Release Drafter is still running (${runs.data.total_count} runs in progress). Waiting...`);
                await new Promise(r => setTimeout(r, 10000)); // 10 seconds
              } else {
                core.info('No running Release Drafter workflow found. Proceeding.');
                return;
              }
            }

            throw new Error('Timed out waiting for Release Drafter to finish.');



      - name: Get current release draft tag
        id: get_draft
        uses: actions/github-script@v6
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const draftRelease = releases.data.find(r => r.draft);
            if (!draftRelease) {
              core.setOutput("tag", "");
            } else {
              core.setOutput("tag", draftRelease.tag_name);
            }

      - name: Write release tag to file
        if: steps.get_draft.outputs.tag != ''
        run: |
          mkdir -p build
          tag="${{ steps.get_draft.outputs.tag }}"
          # Remove leading 'v' if present
          clean_tag="${tag#v}"
          echo "$clean_tag" > build/release.txt


      - name: Run verify.sh to check build files
        id: verify
        run: |
          chmod +x ./build/verify.sh
          ./build/verify.sh > verify_result.txt
          cat verify_result.txt
          echo "verify_result=$(cat verify_result.txt)" >> $GITHUB_OUTPUT

      - name: Handle missing files (create PR)
        if: steps.verify.outputs.verify_result == 'false'
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: Update build_files.list with missing source files
          branch: update-build-files-list
          title: Update build_files.list to include new source files
          labels: patch
          body: |
            This PR updates the build_files.list to include new source files detected in the src/ directory.

      - name: Run build.sh and push dist if verify passed
        if: steps.verify.outputs.verify_result == 'true'
        run: |
          chmod +x ./build/build.sh
          ./build/build.sh
          git add ./metaquill.user.js ./src/core/headers.js ./build/release.txt
          git commit -m "Build: Update metaquill.user.js on push to main" || echo "No changes to commit"
          git push
